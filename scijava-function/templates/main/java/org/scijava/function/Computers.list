.include Globals.list
arities = (0..maxArity).collect()

[Computers.java]
nilArgs = ```
{ arity ->
  names = nilNames(arity)
  outType = names.remove(names.size() - 1)
  names = [outType] + names
  String.join(', ', names)
}
```
matchParams = ```
{ arity ->
  // contains "I1, I2, ..., IN, O"
  generics = genericParamTypes(arity)
  // contains "in1, in2, ..., inN, out"
  names = nilNames(arity)
  // constructing strings of the term "final Nil<I1> in1"
  nilArgs = (0..arity).stream().map{a -> "final Nil<${generics[a]}> ${names[a]}"}.collect()
  String.join(', ', nilArgs)
}
```
extraGenerics = ```
{ arity, a ->
  generics = genericParamTypes(arity).swap(a-1, arity)
  '<' + String.join(', ', generics) + '>'
}
```
extraComputeParams = ```
{ arity, a->
  typeParams = typeParamsList(arity).swap(a-1, arity)
  typeParams.set(a-1, "@Container " + typeParams.get(a-1))
  String.join(', ', typeParams)
}
```
extraComputeArgs = ```
{ arity, a->
  names = genericsNamesList(arity).swap(a-1, arity)
  String.join(', ', names)
}
```
